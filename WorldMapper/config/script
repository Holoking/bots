---
init:
    states: 
        - "AK"
        - "AL"
        - "AR"
        - "AZ"
        - "CA"
        - "CO"
        - "CT"
        - "DE"
        - "FL"
        - "GA"
        - "HI"
        - "IA"
        - "ID"
        - "IL"
        - "IN"
        - "KS"
        - "KY"
        - "LA"
        - "MA"
        - "MD"
        - "ME"
        - "MI"
        - "MN"
        - "MO"
        - "MS"
        - "MT"
        - "NC"
        - "ND"
        - "NE"
        - "NH"
        - "NJ"
        - "NM"
        - "NV"
        - "NY"
        - "OH"
        - "OK"
        - "OR"
        - "PA"
        - "RI"
        - "SC"
        - "SD"
        - "TN"
        - "TX"
        - "UT"
        - "VA"
        - "VT"
        - "WA"
        - "WI"
        - "WV"
        - "WY"
    keywords:
        - 'supermarket'
        - 'theatre'
        - 'gas station'
        - 'train station'
        - 'club'
        - 'gym'
        - 'hotel'
        - 'restaurant'
        - 'bar'
        - 'park'
        - 'school'
        - 'university'
        - 'store'
        - 'fast food'
        - 'stadium'
    country: "USA"
    place_mongo_client:
        host: 'localhost'
        port: '27017'
        user: 'likwidteam'
        pwd: '87BotsinAction!'
        database: 'places'
        collection: 'places'
    google_account_key: 'AIzaSyBksI1g3hmNZXLyoctDmQoH8hdnpJWGLRo'
steps:
    - name: 1 - initialize google maps api
      function:
        name: worldmapper.maps_utils.initiate_google_maps_api
        parameters:
            - $google_account_key
        options:
        return:
            - gm_api
    - instr: <while TRUE>
    - instr: <for search_type:$keywords>      
    - instr: <for state:$states>
    - name: Get all places by state
      function:
        name: worldmapper.maps_api.get_places_within_state_by_type
        parameters:
            - $search_type
            - $state
            - $country
            - $gm_api
        options:
        return:
            - places_in_state
    - instr: <for place:$places_in_state>
    - name: Create document to save (per place)
      function:
        name: mongodb.store_place
        parameters:
            - $country
            - $state
            - $place
            - $search_type
            - $place_mongo_client
        options:
        return:
    - instr: <rof>
    - instr: <rof>
    - instr: <rof>
    - instr: <liw>
on_except:
    - exception:
        class: Timeout
      handler:
        function:
            name: exception_handlers.TimeWait.execute
            parameters:
                - 900
            options:
            return:
...
